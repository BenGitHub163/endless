<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.seven.endless.mapper.ElUserMapper">
  <resultMap id="BaseResultMap" type="team.seven.endless.entity.ElUser">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="e_mail" jdbcType="VARCHAR" property="eMail" />
    <result column="user_role" jdbcType="TINYINT" property="userRole" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="per_sign" jdbcType="VARCHAR" property="perSign" />
    <result column="rewards_points" jdbcType="INTEGER" property="rewardsPoints" />
    <result column="exp" jdbcType="INTEGER" property="exp" />
    <result column="tel_phone" jdbcType="VARCHAR" property="telPhone" />
    <result column="user_state" jdbcType="TINYINT" property="userState" />
    <result column="recent_login_time" jdbcType="TIMESTAMP" property="recentLoginTime" />
    <result column="recent_login_ip" jdbcType="VARCHAR" property="recentLoginIp" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, account, password, nickname, e_mail, user_role, avatar_url, sex, birthday, 
    per_sign, rewards_points, exp, tel_phone, user_state, recent_login_time, recent_login_ip, 
    is_deleted, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="team.seven.endless.entity.ElUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from el_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from el_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from el_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="team.seven.endless.entity.ElUserExample">
    delete from el_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="team.seven.endless.entity.ElUser">
    insert into el_user (user_id, account, password, 
      nickname, e_mail, user_role, 
      avatar_url, sex, birthday, 
      per_sign, rewards_points, exp, 
      tel_phone, user_state, recent_login_time, 
      recent_login_ip, is_deleted, create_time, 
      update_time)
    values (#{userId,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{eMail,jdbcType=VARCHAR}, #{userRole,jdbcType=TINYINT}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{birthday,jdbcType=DATE}, 
      #{perSign,jdbcType=VARCHAR}, #{rewardsPoints,jdbcType=INTEGER}, #{exp,jdbcType=INTEGER}, 
      #{telPhone,jdbcType=VARCHAR}, #{userState,jdbcType=TINYINT}, #{recentLoginTime,jdbcType=TIMESTAMP}, 
      #{recentLoginIp,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="team.seven.endless.entity.ElUser">
    insert into el_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="eMail != null">
        e_mail,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="perSign != null">
        per_sign,
      </if>
      <if test="rewardsPoints != null">
        rewards_points,
      </if>
      <if test="exp != null">
        exp,
      </if>
      <if test="telPhone != null">
        tel_phone,
      </if>
      <if test="userState != null">
        user_state,
      </if>
      <if test="recentLoginTime != null">
        recent_login_time,
      </if>
      <if test="recentLoginIp != null">
        recent_login_ip,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="eMail != null">
        #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=TINYINT},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="perSign != null">
        #{perSign,jdbcType=VARCHAR},
      </if>
      <if test="rewardsPoints != null">
        #{rewardsPoints,jdbcType=INTEGER},
      </if>
      <if test="exp != null">
        #{exp,jdbcType=INTEGER},
      </if>
      <if test="telPhone != null">
        #{telPhone,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        #{userState,jdbcType=TINYINT},
      </if>
      <if test="recentLoginTime != null">
        #{recentLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recentLoginIp != null">
        #{recentLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.seven.endless.entity.ElUserExample" resultType="java.lang.Long">
    select count(*) from el_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update el_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.eMail != null">
        e_mail = #{record.eMail,jdbcType=VARCHAR},
      </if>
      <if test="record.userRole != null">
        user_role = #{record.userRole,jdbcType=TINYINT},
      </if>
      <if test="record.avatarUrl != null">
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.perSign != null">
        per_sign = #{record.perSign,jdbcType=VARCHAR},
      </if>
      <if test="record.rewardsPoints != null">
        rewards_points = #{record.rewardsPoints,jdbcType=INTEGER},
      </if>
      <if test="record.exp != null">
        exp = #{record.exp,jdbcType=INTEGER},
      </if>
      <if test="record.telPhone != null">
        tel_phone = #{record.telPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userState != null">
        user_state = #{record.userState,jdbcType=TINYINT},
      </if>
      <if test="record.recentLoginTime != null">
        recent_login_time = #{record.recentLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recentLoginIp != null">
        recent_login_ip = #{record.recentLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update el_user
    set user_id = #{record.userId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      e_mail = #{record.eMail,jdbcType=VARCHAR},
      user_role = #{record.userRole,jdbcType=TINYINT},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=DATE},
      per_sign = #{record.perSign,jdbcType=VARCHAR},
      rewards_points = #{record.rewardsPoints,jdbcType=INTEGER},
      exp = #{record.exp,jdbcType=INTEGER},
      tel_phone = #{record.telPhone,jdbcType=VARCHAR},
      user_state = #{record.userState,jdbcType=TINYINT},
      recent_login_time = #{record.recentLoginTime,jdbcType=TIMESTAMP},
      recent_login_ip = #{record.recentLoginIp,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.seven.endless.entity.ElUser">
    update el_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="eMail != null">
        e_mail = #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=TINYINT},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="perSign != null">
        per_sign = #{perSign,jdbcType=VARCHAR},
      </if>
      <if test="rewardsPoints != null">
        rewards_points = #{rewardsPoints,jdbcType=INTEGER},
      </if>
      <if test="exp != null">
        exp = #{exp,jdbcType=INTEGER},
      </if>
      <if test="telPhone != null">
        tel_phone = #{telPhone,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        user_state = #{userState,jdbcType=TINYINT},
      </if>
      <if test="recentLoginTime != null">
        recent_login_time = #{recentLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recentLoginIp != null">
        recent_login_ip = #{recentLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.seven.endless.entity.ElUser">
    update el_user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      e_mail = #{eMail,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=TINYINT},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      per_sign = #{perSign,jdbcType=VARCHAR},
      rewards_points = #{rewardsPoints,jdbcType=INTEGER},
      exp = #{exp,jdbcType=INTEGER},
      tel_phone = #{telPhone,jdbcType=VARCHAR},
      user_state = #{userState,jdbcType=TINYINT},
      recent_login_time = #{recentLoginTime,jdbcType=TIMESTAMP},
      recent_login_ip = #{recentLoginIp,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>